#!/bin/sh

# name of directory after extracting the archive in working directory
PKG_DIR="mqtt-5.10.0.min.js"

# name of the archive in dl directory
PKG_ARCHIVE_FILE="${PKG_DIR}"

# download link for the sources to be stored in dl directory (use "none" if empty)
# PKG_DOWNLOAD="https://unpkg.com/mqtt@5.10.0/dist/mqtt.min.js"
PKG_DOWNLOAD="https://m3-container.net/M3_Container/oss_packages/${PKG_ARCHIVE_FILE}"

# md5 checksum of archive in dl directory (use "none" if empty)
PKG_CHECKSUM="8f32c3bb9933237496b1aa73f7ec80fcfd5ba42cafdbf8849a95461a55f049ea"



SCRIPTSDIR=$(dirname $0)
HELPERSDIR="${SCRIPTSDIR}/helpers"
TOPDIR=$(realpath ${SCRIPTSDIR}/../..)
. "${TOPDIR}/scripts/common_settings.sh"
. "${HELPERSDIR}/functions.sh"
PKG_ARCHIVE="${DOWNLOADS_DIR}/${PKG_ARCHIVE_FILE}"
PKG_SRC_DIR="${SOURCES_DIR}/${PKG_DIR}"
PKG_BUILD_DIR="${BUILD_DIR}/${PKG_DIR}"
PKG_INSTALL_DIR="${PKG_BUILD_DIR}/install"

configure()
{
    true
}

compile()
{
    true
}

unpack()
{
    mkdir -p "${PKG_BUILD_DIR}"
    cp "${PKG_ARCHIVE}" "${PKG_BUILD_DIR}"
}

install_staging()
{
    cd "${PKG_BUILD_DIR}"
    mkdir -p "${STAGING_DIR}/usr/local/lib"
    cp "${PKG_DIR}" "${STAGING_DIR}/usr/local/lib" || exit_failure "failed to install ${PKG_DIR} to ${STAGING_DIR}"
    ln -s "${STAGING_DIR}/usr/local/lib/${PKG_DIR}" "${STAGING_DIR}/usr/local/lib/mqtt.min.js" || exit_failure "failed to install ${PKG_DIR} to ${STAGING_DIR}"
}

uninstall_staging()
{
    rm -vf "${STAGING_DIR}/usr/local/lib/${PKG_DIR}" || exit_failure "failed to uninstall ${PKG_DIR} from ${STAGING_DIR}"
    rm -vf "${STAGING_DIR}/usr/local/lib/mqtt.min.js"  || exit_failure "failed to uninstall ${PKG_DIR} from ${STAGING_DIR}"
}

. ${HELPERSDIR}/call_functions.sh
